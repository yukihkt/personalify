Archive of code that have been commented out due to no longer
requiring them. However, I did put in the work to use and figure them out
so in case that we need them later, they are still archived here, for
us to easily use, without clogging up the views and components files

<Vuex-Store>
  [state]
    stateKey: "spotify_auth_state", // localStorage auth key
    mbtiDomain: "https://personalitytest.herokuapp.com/api/v1", // mbti api
    auth_token: "", // spotify auth token for current user
    tracks: {}, // track ids -- obj --> might not need
    artists: {}, // artist ids -- obj --> might not need
    questions: [], // list of personality test questions retrieved -- arr (that is the data response)
    answers: {}, // user-answers to the personality test questions retrieved -- obj (that is the data request requirement)
    personalityResults: {}, // results object that is returned -- obj (data response from api)

    genres: {}, // genre ids -- obj, cant use keyed collection like set
  [mutations]
    updateToken(state, newToken) { state.auth_token = newToken; },
    updateTracks(state, newTracks) {
      if (newTracks in state.tracks) state.tracks[newTracks] += 1;
      else state.tracks[newTracks] = 1;
    },
    updateArtists(state, newArtist) {
      if (newArtist in state.artists) state.artists[newArtist] += 1;
      else state.artists[newArtist] = 1;
    },
    updateQuestions(state, newQuestions) { state.questions = newQuestions; },
    updatePersonalityResults(state, newResults) { state.personalityResults = newResults; },

    updateGenres(state, newGenre) {
      state.genres[newGenre] = 0; // check for newGenre in state.genres doesn't work, doesn't really check it, and I can't find why
    },
  [actions]
    async retrieveQuestions({ state, commit }) {
      const config = newConfig("GET", `${state.mbtiDomain}/questions`);
      const questions = await axiosAwait(config);
      if (questions) commit("updateQuestions", questions);
      else console.log("Unable to retrieve questions");
    },
    async retrieveResults({ state, commit }, location) {
      const config = newConfig("POST", `${state.mbtiDomain}/answers`, {
        data: { answers: state.answers, location: location },
      });
      const results = await axiosAwait(config);
      if (results) commit("updatePersonalityResults", results);
      else console.log("Unable to return results");
    },

    [under "retrieveGenres()", after "tracks.items.forEach()"]
      userArtists.forEach(async (id) => {
        const artistConfig = newConfig(
          "GET",
          `${state.spotifyDomain}/artists/${id}`,
          { auth: `Bearer ${auth_token}` }
        );
        const artist = await axiosAwait(artistConfig);
        if (artist)
          artist.genres.forEach((genre) => commit("updateGenres", genre));
        else console.log("Unable to retrieve genres");
      });
</Vuex-Store>

<LoggedIn>
  [after retrieveGenres]
    store.commit("updateToken", access_token);
    store.dispatch("retrieveQuestions");
</LoggedIn>